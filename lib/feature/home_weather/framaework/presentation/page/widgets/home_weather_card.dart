import 'package:flutter/material.dart';import 'package:weatherdemo/core/utils/commons/colors_app.dart';import 'package:weatherdemo/core/utils/commons/dimens_app.dart';import 'package:weatherdemo/core/utils/extension_function/context_extension.dart';import 'package:weatherdemo/feature/home_weather/framaework/presentation/page/uiModels/home_weather_item_state.dart';class HomeWeatherCard extends StatelessWidget {  final HomeWeatherItemState homeWeatherItemState;  const HomeWeatherCard({required this.homeWeatherItemState, super.key});  @override  Widget build(BuildContext context) {    return Card(      elevation: elevation4,      child: SizedBox(          width: homeWeatherCardWight,          height: homeWeatherCardHeight,          child: Column(            mainAxisAlignment: MainAxisAlignment.spaceBetween,            children: [              Container(                  width: double.infinity,                  padding: const EdgeInsets.only(right: dimen8),                  child: Text(                    homeWeatherItemState.date,                    textAlign: TextAlign.right,                    style: const TextStyle(fontSize: fonSize18, fontStyle: FontStyle.italic, fontWeight: FontWeight.w500),                  )),              Padding(                padding: const EdgeInsets.all(dimen8),                child: Text(                  homeWeatherItemState.condition,                  maxLines: 2,                  overflow: TextOverflow.ellipsis,                  style: const TextStyle(fontSize: fonSize30, fontStyle: FontStyle.normal, fontWeight: FontWeight.bold),                ),              ),              Row(                children: [                  Expanded(                      flex: 1,                      child: temperatureMinimum(                          title: context.getText().homeWeatherCardTitleMinimumTemperature,                          temperature: homeWeatherItemState.temperatureMinimum,                          background: backgroundMinimumTemperature)),                  Expanded(                      flex: 1,                      child: temperatureMaximum(                          title: context.getText().homeWeatherCardTitleMaximumTemperature,                          temperature: homeWeatherItemState.temperatureMaximum,                          background: backgroundMaximumTemperature))                ],              )            ],          )),    );  }  Widget temperatureMinimum({required String title, required String temperature, required Color background}) {    return Container(        height: homeWeatherTemperatureHeight,        alignment: Alignment.center,        decoration: BoxDecoration(color: background, borderRadius: const BorderRadius.only(bottomLeft: Radius.circular(radiusCorner4))),        child: Wrap(          direction: Axis.vertical,          runAlignment: WrapAlignment.center,          children: [            Text(title, style: const TextStyle(fontSize: fonSize24, fontStyle: FontStyle.normal, fontWeight: FontWeight.bold)),            const SizedBox(              height: dimen8,            ),            Text(temperature, style: const TextStyle(fontSize: fonSize24, fontStyle: FontStyle.normal, fontWeight: FontWeight.bold)),          ],        ));  }  Widget temperatureMaximum({required String title, required String temperature, required Color background}) {    return Container(        height: homeWeatherTemperatureHeight,        alignment: Alignment.center,        decoration: BoxDecoration(color: background, borderRadius: const BorderRadius.only(bottomRight: Radius.circular(radiusCorner4))),        child: Wrap(          direction: Axis.vertical,          runAlignment: WrapAlignment.center,          children: [            Text(title, style: const TextStyle(fontSize: fonSize24, fontStyle: FontStyle.normal, fontWeight: FontWeight.bold)),            const SizedBox(              height: dimen8,            ),            Text(temperature, style: const TextStyle(fontSize: fonSize24, fontStyle: FontStyle.normal, fontWeight: FontWeight.bold)),          ],        ));  }}