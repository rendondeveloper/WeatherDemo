import 'dart:convert' as convert;import 'package:http/http.dart' as http;import 'package:weatherdemo/core/utils/base/pair.dart';import 'package:weatherdemo/feature/home_weather/data/data_source/fetch_weather_data_source.dart';import 'package:weatherdemo/feature/home_weather/domain/models_domain/weather_domain.dart';import 'package:weatherdemo/feature/home_weather/framaework/data/config/weather.dart';import 'package:weatherdemo/feature/home_weather/framaework/data/mapper/map_weather_to_weather_domain.dart';const String _latitudeReplace = "latitudeReplace", _longitudeReplace = "longitudeReplace";//TODO this value should be in configuration on app, but for time I put hereconst String _apiKey = "a5a47c18197737e8eeca634cd6acb581";const String _uriFetchWeather =    "https://api.openweathermap.org/data/2.5/onecall?lat=$_longitudeReplace&lon=$_latitudeReplace&lang=sp, es&exclude=daily&units=imperial&appid=$_apiKey";class FetchWeatherDataSourceImp extends FetchWeatherDataSource {  final MapWeatherToWeatherDomain _mapWeatherToWeatherDomain;  FetchWeatherDataSourceImp(this._mapWeatherToWeatherDomain);  @override  Future<Pair<WeatherDomain?, Exception?>> fetchWeather(String latitude, String longitude) async {    late Pair<WeatherDomain?, Exception?> result;    try {      final uri = Uri.parse(_uriFetchWeather.replaceAll(_latitudeReplace, latitude).replaceAll(_longitudeReplace, longitude));      final response = await http.get(uri);      if (response.statusCode == 200) {        final responseWeather = Weather.fromJson(convert.jsonDecode(response.body) as Map<String, dynamic>);        final list = _mapWeatherToWeatherDomain.map(responseWeather);        result = Pair(null, list);      } else {        result = Pair(Exception(), null);      }    } catch (ex) {      result = Pair(ex as Exception, null);    }    return result;  }}